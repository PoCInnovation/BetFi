import { hsalsa, secretbox } from "@noble/ciphers/salsa";
import { x25519 } from "@noble/curves/ed25519";
import { u32, u8 } from "@noble/hashes/utils";
export function cryptoBoxOpenEasy({ ciphertext, nonce, publicKey, privateKey, }) {
    const sharedSecret = x25519.getSharedSecret(privateKey, publicKey);
    // const _utf8ToBytes = (str: string) =>
    //   Uint8Array.from(str.split("").map((c) => c.charCodeAt(0)));
    // const sigma = u32(_utf8ToBytes("expand 32-byte k"));
    const sigma = new Uint32Array([
        1634760805, 857760878, 2036477234, 1797285236,
    ]);
    const output = new Uint32Array(8);
    const zeros = new Uint32Array(4).fill(0);
    hsalsa(sigma, u32(sharedSecret), zeros, output);
    const key = u8(output);
    const box = secretbox(key, nonce);
    return box.open(ciphertext);
}
//# sourceMappingURL=crypto-box-open-easy.js.map