import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
/**
 * @generated from enum grc20.DataType
 */
export declare enum DataType {
    /**
     * @generated from enum value: TEXT = 0;
     */
    TEXT = 0,
    /**
     * @generated from enum value: NUMBER = 1;
     */
    NUMBER = 1,
    /**
     * @generated from enum value: CHECKBOX = 2;
     */
    CHECKBOX = 2,
    /**
     * @generated from enum value: TIME = 3;
     */
    TIME = 3,
    /**
     * @generated from enum value: POINT = 4;
     */
    POINT = 4,
    /**
     * @generated from enum value: RELATION = 5;
     */
    RELATION = 5
}
/**
 * @generated from message grc20.Edit
 */
export declare class Edit extends Message<Edit> {
    /**
     * @generated from field: bytes id = 1;
     */
    id: Uint8Array<ArrayBuffer>;
    /**
     * @generated from field: string name = 2;
     */
    name: string;
    /**
     * @generated from field: repeated grc20.Op ops = 3;
     */
    ops: Op[];
    /**
     * @generated from field: repeated bytes authors = 4;
     */
    authors: Uint8Array[];
    /**
     * @generated from field: optional bytes language = 5;
     */
    language?: Uint8Array;
    constructor(data?: PartialMessage<Edit>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "grc20.Edit";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Edit;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Edit;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Edit;
    static equals(a: Edit | PlainMessage<Edit> | undefined, b: Edit | PlainMessage<Edit> | undefined): boolean;
}
/**
 * @generated from message grc20.ImportEdit
 */
export declare class ImportEdit extends Message<ImportEdit> {
    /**
     * @generated from field: bytes id = 1;
     */
    id: Uint8Array<ArrayBuffer>;
    /**
     * @generated from field: string name = 2;
     */
    name: string;
    /**
     * @generated from field: repeated grc20.Op ops = 3;
     */
    ops: Op[];
    /**
     * @generated from field: repeated bytes authors = 4;
     */
    authors: Uint8Array[];
    /**
     * @generated from field: bytes created_by = 5;
     */
    createdBy: Uint8Array<ArrayBuffer>;
    /**
     * @generated from field: string created_at = 6;
     */
    createdAt: string;
    /**
     * @generated from field: bytes block_hash = 7;
     */
    blockHash: Uint8Array<ArrayBuffer>;
    /**
     * @generated from field: string block_number = 8;
     */
    blockNumber: string;
    /**
     * @generated from field: bytes transaction_hash = 9;
     */
    transactionHash: Uint8Array<ArrayBuffer>;
    constructor(data?: PartialMessage<ImportEdit>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "grc20.ImportEdit";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportEdit;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportEdit;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportEdit;
    static equals(a: ImportEdit | PlainMessage<ImportEdit> | undefined, b: ImportEdit | PlainMessage<ImportEdit> | undefined): boolean;
}
/**
 * @generated from message grc20.Import
 */
export declare class Import extends Message<Import> {
    /**
     * these strings are IPFS cids representing the import edit message
     *
     * @generated from field: repeated string edits = 1;
     */
    edits: string[];
    constructor(data?: PartialMessage<Import>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "grc20.Import";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Import;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Import;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Import;
    static equals(a: Import | PlainMessage<Import> | undefined, b: Import | PlainMessage<Import> | undefined): boolean;
}
/**
 * @generated from message grc20.File
 */
export declare class File extends Message<File> {
    /**
     * @generated from field: string version = 1;
     */
    version: string;
    /**
     * @generated from oneof grc20.File.payload
     */
    payload: {
        /**
         * @generated from field: grc20.Edit add_edit = 2;
         */
        value: Edit;
        case: "addEdit";
    } | {
        /**
         * @generated from field: grc20.Import import_space = 3;
         */
        value: Import;
        case: "importSpace";
    } | {
        /**
         * @generated from field: bytes archive_space = 4;
         */
        value: Uint8Array;
        case: "archiveSpace";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<File>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "grc20.File";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): File;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): File;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): File;
    static equals(a: File | PlainMessage<File> | undefined, b: File | PlainMessage<File> | undefined): boolean;
}
/**
 * @generated from message grc20.Op
 */
export declare class Op extends Message<Op> {
    /**
     * @generated from oneof grc20.Op.payload
     */
    payload: {
        /**
         * @generated from field: grc20.Entity update_entity = 1;
         */
        value: Entity;
        case: "updateEntity";
    } | {
        /**
         * @generated from field: grc20.Relation create_relation = 2;
         */
        value: Relation;
        case: "createRelation";
    } | {
        /**
         * @generated from field: grc20.RelationUpdate update_relation = 3;
         */
        value: RelationUpdate;
        case: "updateRelation";
    } | {
        /**
         * @generated from field: bytes delete_relation = 4;
         */
        value: Uint8Array;
        case: "deleteRelation";
    } | {
        /**
         * @generated from field: grc20.Property create_property = 5;
         */
        value: Property;
        case: "createProperty";
    } | {
        /**
         * @generated from field: grc20.UnsetEntityValues unset_entity_values = 6;
         */
        value: UnsetEntityValues;
        case: "unsetEntityValues";
    } | {
        /**
         * @generated from field: grc20.UnsetRelationFields unset_relation_fields = 7;
         */
        value: UnsetRelationFields;
        case: "unsetRelationFields";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<Op>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "grc20.Op";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Op;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Op;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Op;
    static equals(a: Op | PlainMessage<Op> | undefined, b: Op | PlainMessage<Op> | undefined): boolean;
}
/**
 * @generated from message grc20.Property
 */
export declare class Property extends Message<Property> {
    /**
     * @generated from field: bytes id = 1;
     */
    id: Uint8Array<ArrayBuffer>;
    /**
     * @generated from field: grc20.DataType data_type = 2;
     */
    dataType: DataType;
    constructor(data?: PartialMessage<Property>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "grc20.Property";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Property;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Property;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Property;
    static equals(a: Property | PlainMessage<Property> | undefined, b: Property | PlainMessage<Property> | undefined): boolean;
}
/**
 * @generated from message grc20.UnsetEntityValues
 */
export declare class UnsetEntityValues extends Message<UnsetEntityValues> {
    /**
     * @generated from field: bytes id = 1;
     */
    id: Uint8Array<ArrayBuffer>;
    /**
     * @generated from field: repeated bytes properties = 2;
     */
    properties: Uint8Array[];
    constructor(data?: PartialMessage<UnsetEntityValues>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "grc20.UnsetEntityValues";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnsetEntityValues;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnsetEntityValues;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnsetEntityValues;
    static equals(a: UnsetEntityValues | PlainMessage<UnsetEntityValues> | undefined, b: UnsetEntityValues | PlainMessage<UnsetEntityValues> | undefined): boolean;
}
/**
 * @generated from message grc20.Relation
 */
export declare class Relation extends Message<Relation> {
    /**
     * @generated from field: bytes id = 1;
     */
    id: Uint8Array<ArrayBuffer>;
    /**
     * @generated from field: bytes type = 2;
     */
    type: Uint8Array<ArrayBuffer>;
    /**
     * @generated from field: bytes from_entity = 3;
     */
    fromEntity: Uint8Array<ArrayBuffer>;
    /**
     * @generated from field: optional bytes from_space = 4;
     */
    fromSpace?: Uint8Array;
    /**
     * @generated from field: optional bytes from_version = 5;
     */
    fromVersion?: Uint8Array;
    /**
     * @generated from field: bytes to_entity = 6;
     */
    toEntity: Uint8Array<ArrayBuffer>;
    /**
     * @generated from field: optional bytes to_space = 7;
     */
    toSpace?: Uint8Array;
    /**
     * @generated from field: optional bytes to_version = 8;
     */
    toVersion?: Uint8Array;
    /**
     * @generated from field: bytes entity = 9;
     */
    entity: Uint8Array<ArrayBuffer>;
    /**
     * @generated from field: optional string position = 10;
     */
    position?: string;
    /**
     * @generated from field: optional bool verified = 11;
     */
    verified?: boolean;
    constructor(data?: PartialMessage<Relation>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "grc20.Relation";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Relation;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Relation;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Relation;
    static equals(a: Relation | PlainMessage<Relation> | undefined, b: Relation | PlainMessage<Relation> | undefined): boolean;
}
/**
 * @generated from message grc20.RelationUpdate
 */
export declare class RelationUpdate extends Message<RelationUpdate> {
    /**
     * @generated from field: bytes id = 1;
     */
    id: Uint8Array<ArrayBuffer>;
    /**
     * @generated from field: optional bytes from_space = 2;
     */
    fromSpace?: Uint8Array;
    /**
     * @generated from field: optional bytes from_version = 3;
     */
    fromVersion?: Uint8Array;
    /**
     * @generated from field: optional bytes to_space = 4;
     */
    toSpace?: Uint8Array;
    /**
     * @generated from field: optional bytes to_version = 5;
     */
    toVersion?: Uint8Array;
    /**
     * @generated from field: optional string position = 6;
     */
    position?: string;
    /**
     * @generated from field: optional bool verified = 7;
     */
    verified?: boolean;
    constructor(data?: PartialMessage<RelationUpdate>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "grc20.RelationUpdate";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelationUpdate;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelationUpdate;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelationUpdate;
    static equals(a: RelationUpdate | PlainMessage<RelationUpdate> | undefined, b: RelationUpdate | PlainMessage<RelationUpdate> | undefined): boolean;
}
/**
 * @generated from message grc20.UnsetRelationFields
 */
export declare class UnsetRelationFields extends Message<UnsetRelationFields> {
    /**
     * @generated from field: bytes id = 1;
     */
    id: Uint8Array<ArrayBuffer>;
    /**
     * @generated from field: optional bool from_space = 2;
     */
    fromSpace?: boolean;
    /**
     * @generated from field: optional bool from_version = 3;
     */
    fromVersion?: boolean;
    /**
     * @generated from field: optional bool to_space = 4;
     */
    toSpace?: boolean;
    /**
     * @generated from field: optional bool to_version = 5;
     */
    toVersion?: boolean;
    /**
     * @generated from field: optional bool position = 6;
     */
    position?: boolean;
    /**
     * @generated from field: optional bool verified = 7;
     */
    verified?: boolean;
    constructor(data?: PartialMessage<UnsetRelationFields>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "grc20.UnsetRelationFields";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnsetRelationFields;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnsetRelationFields;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnsetRelationFields;
    static equals(a: UnsetRelationFields | PlainMessage<UnsetRelationFields> | undefined, b: UnsetRelationFields | PlainMessage<UnsetRelationFields> | undefined): boolean;
}
/**
 * @generated from message grc20.Entity
 */
export declare class Entity extends Message<Entity> {
    /**
     * @generated from field: bytes id = 1;
     */
    id: Uint8Array<ArrayBuffer>;
    /**
     * @generated from field: repeated grc20.Value values = 2;
     */
    values: Value[];
    constructor(data?: PartialMessage<Entity>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "grc20.Entity";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Entity;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Entity;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Entity;
    static equals(a: Entity | PlainMessage<Entity> | undefined, b: Entity | PlainMessage<Entity> | undefined): boolean;
}
/**
 * @generated from message grc20.Options
 */
export declare class Options extends Message<Options> {
    /**
     * @generated from oneof grc20.Options.value
     */
    value: {
        /**
         * @generated from field: grc20.TextOptions text = 1;
         */
        value: TextOptions;
        case: "text";
    } | {
        /**
         * @generated from field: grc20.NumberOptions number = 2;
         */
        value: NumberOptions;
        case: "number";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<Options>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "grc20.Options";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Options;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Options;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Options;
    static equals(a: Options | PlainMessage<Options> | undefined, b: Options | PlainMessage<Options> | undefined): boolean;
}
/**
 * @generated from message grc20.Value
 */
export declare class Value extends Message<Value> {
    /**
     * @generated from field: bytes property = 1;
     */
    property: Uint8Array<ArrayBuffer>;
    /**
     * @generated from field: string value = 2;
     */
    value: string;
    /**
     * @generated from field: optional grc20.Options options = 3;
     */
    options?: Options;
    constructor(data?: PartialMessage<Value>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "grc20.Value";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Value;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Value;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Value;
    static equals(a: Value | PlainMessage<Value> | undefined, b: Value | PlainMessage<Value> | undefined): boolean;
}
/**
 * @generated from message grc20.TextOptions
 */
export declare class TextOptions extends Message<TextOptions> {
    /**
     * @generated from field: optional bytes language = 1;
     */
    language?: Uint8Array;
    constructor(data?: PartialMessage<TextOptions>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "grc20.TextOptions";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TextOptions;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TextOptions;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TextOptions;
    static equals(a: TextOptions | PlainMessage<TextOptions> | undefined, b: TextOptions | PlainMessage<TextOptions> | undefined): boolean;
}
/**
 * @generated from message grc20.NumberOptions
 */
export declare class NumberOptions extends Message<NumberOptions> {
    /**
     * @generated from field: optional bytes unit = 1;
     */
    unit?: Uint8Array;
    constructor(data?: PartialMessage<NumberOptions>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "grc20.NumberOptions";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NumberOptions;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NumberOptions;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NumberOptions;
    static equals(a: NumberOptions | PlainMessage<NumberOptions> | undefined, b: NumberOptions | PlainMessage<NumberOptions> | undefined): boolean;
}
//# sourceMappingURL=ipfs_pb.d.ts.map