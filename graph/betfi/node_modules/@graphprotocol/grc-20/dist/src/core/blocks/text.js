/**
 * This module provides utility functions for working with text blocks
 * in TypeScript.
 *
 * @since 0.0.6
 */
import { createRelation } from '../../graph/create-relation.js';
import { updateEntity } from '../../graph/update-entity.js';
import { Id, generate } from '../../id.js';
import { BLOCKS, MARKDOWN_CONTENT, TEXT_BLOCK, TYPES_PROPERTY } from '../ids/system.js';
/**
 * Returns the ops to create an entity representing a Text Block.
 *
 * @example
 * ```ts
 * const ops = TextBlock.make({
 *   fromId: 'from-id',
 *   text: 'text',
 *   // optional
 *   position: 'position-string',
 * });
 * ```
 *
 * @param param args {@link TextBlockParams}
 * @returns ops â€“ The ops for the Text Block entity: {@link Op}[]
 */
export function make({ fromId, text, position }) {
    const newBlockId = generate();
    const ops = [];
    const { ops: textBlockTypeOps } = createRelation({
        fromEntity: newBlockId,
        type: TYPES_PROPERTY,
        toEntity: TEXT_BLOCK,
    });
    ops.push(...textBlockTypeOps);
    const { ops: textBlockMarkdownTextOps } = updateEntity({
        id: newBlockId,
        values: [
            {
                property: MARKDOWN_CONTENT,
                value: text,
            },
        ],
    });
    ops.push(...textBlockMarkdownTextOps);
    const { ops: textBlockRelationOps } = createRelation({
        fromEntity: Id(fromId),
        type: BLOCKS,
        toEntity: newBlockId,
        position,
    });
    ops.push(...textBlockRelationOps);
    return ops;
}
//# sourceMappingURL=text.js.map