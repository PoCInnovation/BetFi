import { Id } from '../../id.js';
export declare const ENTITY_ID_PROPERTY: Id;
export declare const PROPERTY: Id;
export declare const SCHEMA_TYPE: Id;
export declare const PROPERTIES: Id;
export declare const NAME_PROPERTY: Id;
export declare const DESCRIPTION_PROPERTY: Id;
export declare const COVER_PROPERTY: Id;
export declare const TYPES_PROPERTY: Id;
export declare const TABS_PROPERTY: Id;
export declare const BLOCKS: Id;
/** Value types */
export declare const URL: Id;
export declare const IMAGE: Id;
export declare const RELATION: Id;
export declare const SPACE_TYPE: Id;
/**
 * Defines the relation value types for a relation. e.g., a Persons
 * attribute must only contain relations where the to entity is type
 * Person
 */
export declare const RELATION_VALUE_RELATIONSHIP_TYPE: Id;
export declare const IMAGE_TYPE: Id;
export declare const IMAGE_FILE_TYPE_PROPERTY: Id;
export declare const IMAGE_HEIGHT_PROPERTY: Id;
export declare const IMAGE_URL_PROPERTY: Id;
export declare const IMAGE_WIDTH_PROPERTY: Id;
/** Data blocks */
export declare const DATA_BLOCK: Id;
export declare const DATA_SOURCE_PROPERTY: Id;
export declare const ALL_OF_GEO_DATA_SOURCE: Id;
export declare const COLLECTION_DATA_SOURCE: Id;
export declare const QUERY_DATA_SOURCE: Id;
export declare const SELECTOR_PROPERTY: Id;
/**
 * Defines the filters applied to a data block. It applies whether
 * the data block is a COLLECTION or a QUERY.
 *
 * See the Filters spec to see the Filter format.
 */
export declare const FILTER: Id;
export declare const SPACE_FILTER: Id;
export declare const ENTITY_FILTER: Id;
/**
 * Defines that a relation type is COLLECTION_ITEM. This is used by
 * data blocks with the COLLECTION_DATA_SOURCE to denote that a relation
 * should be consumed as a collection item in the block.
 *
 * Collections enable data blocks to render arbitrarily selected entities
 * rather than the results of a query. A collection item defines what
 * these selected entities are.
 */
export declare const COLLECTION_ITEM_RELATION_TYPE: Id;
/**
 * Defines the view type for a data block, either a {@link TABLE_VIEW},
 * {@link GALLERY_VIEW} or a {@link LIST_VIEW}. Your own application
 * can define their own views with their own IDs.
 *
 * This view data lives on the relation pointing to the block. This enables
 * different consumers of the data block to define their own views.
 */
export declare const VIEW_PROPERTY: Id;
export declare const VIEW_TYPE: Id;
export declare const TABLE_VIEW: Id;
export declare const LIST_VIEW: Id;
export declare const BULLETED_LIST_VIEW: Id;
export declare const GALLERY_VIEW: Id;
/**
 * Defines the columns to show on a data block when in {@link TABLE_VIEW}.
 */
export declare const SHOWN_COLUMNS: Id;
/**
 * Defines the type of data source for a data block, either a
 * {@link COLLECTION_DATA_SOURCE}, an {@link ALL_OF_GEO_DATA_SOURCE} or
 * a {@link QUERY_DATA_SOURCE}
 */
export declare const DATA_SOURCE_TYPE_RELATION_TYPE: Id;
export declare const IMAGE_BLOCK: Id;
export declare const TEXT_BLOCK: Id;
export declare const MARKDOWN_CONTENT: Id;
/**
 * Relations define an entity which represents a relationship between
 * two entities. Modeling this relationship as a from -> to means that
 * we can add extra data about the relationship to the entity itself
 * rather than to either of the from or to entities.
 *
 * e.g., John and Jane are married and you want to add a marriage date
 * to represent when they were married. It does not make sense to add
 * the date to John and Jane directly, since the data is about the
 * marriage itself, and not John or Jane. This representation of the
 * marriage also only exists in the context of John and Jane.
 */
export declare const RELATION_TYPE: Id;
export declare const RELATION_FROM_PROPERTY: Id;
export declare const RELATION_TO_PROPERTY: Id;
export declare const RELATION_TYPE_PROPERTY: Id;
export declare const RELATION_INDEX: Id;
/**
 * Defines whether a relation has been "verified." Verification can
 * mean different things semantically for different spaces. This
 * flag provides a means for spaces to build UIs or tooling around
 * a semantically verified entity. It's possible for relations to
 * point to entities which aren't verified, and it's up to spaces
 * to decide what "verified" means for them.
 *
 * e.g.
 * a link to a Person might be verified in that the linked space
 * is the correct one to represent this Person from the perspective
 * of the current space.
 */
export declare const VERIFIED_SOURCE_PROPERTY: Id;
export declare const SOURCE_SPACE_PROPERTY: Id;
/** Core types */
export declare const ACADEMIC_FIELD_TYPE: Id;
export declare const COMPANY_TYPE: Id;
export declare const DAO_TYPE: Id;
export declare const GOVERNMENT_ORG_TYPE: Id;
export declare const INDUSTRY_TYPE: Id;
export declare const INTEREST_TYPE: Id;
export declare const NONPROFIT_TYPE: Id;
export declare const POST_TYPE: Id;
export declare const PROJECT_TYPE: Id;
export declare const PROTOCOL_TYPE: Id;
export declare const REGION_TYPE: Id;
export declare const ROOT_SPACE_TYPE: Id;
/** Templates */
export declare const TEMPLATE_PROPERTY: Id;
export declare const PAGE_TYPE: Id;
/**
 * Defines the page type for a template. e.g., an events page, a
 * finances page, a products page, etc.
 */
export declare const PAGE_TYPE_PROPERTY: Id;
/**
  These define the entity id to copy when creating an entity from
  a template.
  */
export declare const ACADEMIC_FIELD_TEMPLATE: Id;
export declare const COMPANY_TEMPLATE: Id;
export declare const DAO_TEMPLATE: Id;
export declare const INDUSTRY_TEMPLATE: Id;
export declare const INTEREST_TEMPLATE: Id;
export declare const NONPROFIT_TEMPLATE: Id;
export declare const PERSON_TEMPLATE: Id;
export declare const PROTOCOL_TEMPLATE: Id;
export declare const REGION_TEMPLATE: Id;
export declare const ONTOLOGY_PAGE_TEMPLATE: Id;
export declare const EDUCATION_PAGE_TEMPLATE: Id;
export declare const ABOUT_PAGE_TEMPLATE: Id;
/**
 * Defines the type of the page being copied when creating an entity
 * from a template.
 */
export declare const ABOUT_PAGE: Id;
export declare const ACTIVITIES_PAGE: Id;
export declare const CULTURE_PAGE: Id;
export declare const EDUCATION_PAGE: Id;
export declare const EVENTS_PAGE: Id;
export declare const FINANCES_PAGE: Id;
export declare const GOVERNMENT_PAGE: Id;
export declare const JOBS_PAGE: Id;
export declare const NEWS_PAGE: Id;
export declare const ONTOLOGY_PAGE: Id;
export declare const PEOPLE_PAGE: Id;
export declare const PERSONAL_PAGE: Id;
export declare const PLACES_PAGE: Id;
export declare const POSTS_PAGE: Id;
export declare const PRODUCTS_PAGE: Id;
export declare const PROFESSIONAL_PAGE: Id;
export declare const PROJECTS_PAGE: Id;
export declare const SERVICES_PAGE: Id;
export declare const SPACES_PAGE: Id;
export declare const TEAM_PAGE: Id;
export declare const FINANCE_OVERVIEW_TYPE: Id;
export declare const FINANCE_SUMMMARY_TYPE: Id;
/** Identity */
export declare const ACCOUNT_TYPE: Id;
export declare const ACCOUNTS_PROPERTY: Id;
export declare const ADDRESS_PROPERTY: Id;
export declare const NETWORK_PROPERTY: Id;
export declare const PERSON_TYPE: Id;
export declare const NETWORK_TYPE: Id;
export declare const GEO_LOCATION_PROPERTY: Id;
export declare const GOALS_PROPERTY: Id;
export declare const GOAL_TYPE: Id;
export declare const MEMBERSHIP_CONTRACT_ADDRESS: Id;
export declare const MISSION_PROPERTY: Id;
export declare const PLACEHOLDER_IMAGE: Id;
export declare const PLACEHOLDER_TEXT: Id;
export declare const TAB_TYPE: Id;
export declare const ROLE_PROPERTY: Id;
export declare const DEFAULT_TYPE: Id;
export declare const BROADER_CLAIMS_PROPERTY: Id;
export declare const CLAIMS_FROM_PROPERTY: Id;
export declare const DEFINITIONS_PROPERTY: Id;
export declare const EMAIL_PROPERTY: Id;
export declare const FOREIGN_TYPES: Id;
export declare const NONPROFIT_CATEGORIES_PROPERTY: Id;
export declare const PHONE_NUMBER_PROPERTY: Id;
export declare const QUOTES_PROPERTY: Id;
export declare const REGION_PROPERTY: Id;
export declare const RELATED_TOPICS_PROPERTY: Id;
export declare const RELEVANT_QUESTIONS_PROPERTY: Id;
export declare const SPEAKERS_PROPERTY: Id;
export declare const STREET_ADDRESS_PROPERTY: Id;
export declare const SUBCLAIMS_PROPERTY: Id;
export declare const VALUES_PROPERTY: Id;
export declare const VISION_PROPERTY: Id;
export declare const CURRENCY_PROPERTY: Id;
export declare const CURRENCY_SIGN_PROPERTY: Id;
export declare const CURRENCY_SYMBOL_PROPERTY: Id;
export declare const CURRENCY_USD_PROPERTY: Id;
export declare const CURRENCY_GBP_PROPERTY: Id;
export declare const CURRENCY_EUR_PROPERTY: Id;
export declare const ROOT_SPACE_ID: Id;
//# sourceMappingURL=system.d.ts.map