import type { CreateResult, CreateTypeParams } from '../types.js';
/**
 * Creates a type with the given name, description, cover and properties.
 * All IDs passed to this function (cover, property IDs) are validated.
 * If any invalid ID is provided, the function will throw an error.
 *
 * @example
 * ```ts
 * const { id, ops } = createType({
 *   name: 'name of the type',
 *   description: 'description of the type',
 *   cover: imageEntityId,
 *   id: typeId, // optional and will be generated if not provided
 *   properties: [propertyEntityId1, propertyEntityId2],
 * });
 * ```
 * @param params – {@link CreateTypeParams}
 * @returns – {@link CreateResult}
 * @throws Will throw an error if any provided ID is invalid
 */
export declare const createType: ({ id: providedId, name, description, cover, properties, }: CreateTypeParams) => CreateResult;
//# sourceMappingURL=create-type.d.ts.map