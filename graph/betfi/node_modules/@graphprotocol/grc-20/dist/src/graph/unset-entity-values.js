import { Id, assertValid } from '../id.js';
/**
 * Unsets properties from an entity.
 *
 * @example
 * ```ts
 * const { ops } = await unsetEntityValues({
 *   id: entityId,
 *   properties: [propertyId1, propertyId2],
 * });
 * ```
 *
 * @param params â€“ {@link UnsetEntityValuesParams}
 * @returns The operation to unset the properties.
 */
export const unsetEntityValues = ({ id, properties }) => {
    assertValid(id, '`id` in `unsetEntityValues`');
    for (const propertyId of properties) {
        assertValid(propertyId, '`properties` in `unsetEntityValues`');
    }
    const op = {
        type: 'UNSET_ENTITY_VALUES',
        unsetEntityValues: {
            id: Id(id),
            properties: properties.map(propertyId => Id(propertyId)),
        },
    };
    return { id: Id(id), ops: [op] };
};
//# sourceMappingURL=unset-entity-values.js.map