import type { CreatePropertyParams, CreateResult } from "../types.js";
/**
 * Creates a property with the given name, description, cover, and type.
 * All IDs passed to this function (cover, relation value types) are validated.
 * If any invalid ID is provided, the function will throw an error.
 *
 * @example
 * ```ts
 * const { id, ops } = createProperty({
 *   name: 'name of the property',
 *   type: 'TEXT'
 *   description: 'description of the property',
 *   cover: imageEntityId,
 *   id: propertyId, // optional and will be generated if not provided
 * });
 * ```
 * @param params – {@link CreatePropertyParams}
 * @returns – {@link CreateResult}
 * @throws Will throw an error if any provided ID is invalid
 */
export declare const createProperty: (params: CreatePropertyParams) => CreateResult;
//# sourceMappingURL=create-property.d.ts.map