export declare const abi: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_member";
        readonly type: "address";
    }];
    readonly name: "AlreadyAMember";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_editor";
        readonly type: "address";
    }];
    readonly name: "AlreadyAnEditor";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_member";
        readonly type: "address";
    }];
    readonly name: "AlreadyNotAMember";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_editor";
        readonly type: "address";
    }];
    readonly name: "AlreadyNotAnEditor";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "dao";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "where";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "who";
        readonly type: "address";
    }, {
        readonly internalType: "bytes32";
        readonly name: "permissionId";
        readonly type: "bytes32";
    }];
    readonly name: "DaoUnauthorized";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint64";
        readonly name: "limit";
        readonly type: "uint64";
    }, {
        readonly internalType: "uint64";
        readonly name: "actual";
        readonly type: "uint64";
    }];
    readonly name: "DateOutOfBounds";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint64";
        readonly name: "limit";
        readonly type: "uint64";
    }, {
        readonly internalType: "uint64";
        readonly name: "actual";
        readonly type: "uint64";
    }];
    readonly name: "DurationOutOfBounds";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "EmptyContent";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "member";
        readonly type: "address";
    }];
    readonly name: "InvalidAddresslistUpdate";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly name: "InvalidInterface";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "NoEditorsLeft";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "caller";
        readonly type: "address";
    }];
    readonly name: "NotAMember";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "NotAnEditor";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "OnlyCreatorCanCancel";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "length";
        readonly type: "uint256";
    }];
    readonly name: "OnlyOneEditorPerCall";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "sender";
        readonly type: "address";
    }];
    readonly name: "ProposalCreationForbidden";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }];
    readonly name: "ProposalExecutionForbidden";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "ProposalIsNotOpen";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "limit";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint256";
        readonly name: "actual";
        readonly type: "uint256";
    }];
    readonly name: "RatioOutOfBounds";
    readonly type: "error";
}, {
    readonly inputs: readonly [];
    readonly name: "Unauthorized";
    readonly type: "error";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }, {
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }, {
        readonly internalType: "enum IMajorityVoting.VoteOption";
        readonly name: "voteOption";
        readonly type: "uint8";
    }];
    readonly name: "VoteCastForbidden";
    readonly type: "error";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "creator";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint64";
        readonly name: "startDate";
        readonly type: "uint64";
    }, {
        readonly indexed: false;
        readonly internalType: "uint64";
        readonly name: "endDate";
        readonly type: "uint64";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes";
        readonly name: "metadata";
        readonly type: "bytes";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "subspace";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "dao";
        readonly type: "address";
    }];
    readonly name: "AcceptSubspaceProposalCreated";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "creator";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint64";
        readonly name: "startDate";
        readonly type: "uint64";
    }, {
        readonly indexed: false;
        readonly internalType: "uint64";
        readonly name: "endDate";
        readonly type: "uint64";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes";
        readonly name: "metadata";
        readonly type: "bytes";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "editor";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "dao";
        readonly type: "address";
    }];
    readonly name: "AddEditorProposalCreated";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "previousAdmin";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "newAdmin";
        readonly type: "address";
    }];
    readonly name: "AdminChanged";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "beacon";
        readonly type: "address";
    }];
    readonly name: "BeaconUpgraded";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "dao";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "editor";
        readonly type: "address";
    }];
    readonly name: "EditorAdded";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "dao";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "editor";
        readonly type: "address";
    }];
    readonly name: "EditorLeft";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "dao";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "editor";
        readonly type: "address";
    }];
    readonly name: "EditorRemoved";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "dao";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address[]";
        readonly name: "editors";
        readonly type: "address[]";
    }];
    readonly name: "EditorsAdded";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "uint8";
        readonly name: "version";
        readonly type: "uint8";
    }];
    readonly name: "Initialized";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "dao";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "member";
        readonly type: "address";
    }];
    readonly name: "MemberAdded";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "dao";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "member";
        readonly type: "address";
    }];
    readonly name: "MemberLeft";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "dao";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "member";
        readonly type: "address";
    }];
    readonly name: "MemberRemoved";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }];
    readonly name: "ProposalCanceled";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "creator";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint64";
        readonly name: "startDate";
        readonly type: "uint64";
    }, {
        readonly indexed: false;
        readonly internalType: "uint64";
        readonly name: "endDate";
        readonly type: "uint64";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes";
        readonly name: "metadata";
        readonly type: "bytes";
    }, {
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly indexed: false;
        readonly internalType: "struct IDAO.Action[]";
        readonly name: "actions";
        readonly type: "tuple[]";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "allowFailureMap";
        readonly type: "uint256";
    }];
    readonly name: "ProposalCreated";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }];
    readonly name: "ProposalExecuted";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "creator";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint64";
        readonly name: "startDate";
        readonly type: "uint64";
    }, {
        readonly indexed: false;
        readonly internalType: "uint64";
        readonly name: "endDate";
        readonly type: "uint64";
    }, {
        readonly indexed: false;
        readonly internalType: "string";
        readonly name: "contentUri";
        readonly type: "string";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "dao";
        readonly type: "address";
    }];
    readonly name: "PublishEditsProposalCreated";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "creator";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint64";
        readonly name: "startDate";
        readonly type: "uint64";
    }, {
        readonly indexed: false;
        readonly internalType: "uint64";
        readonly name: "endDate";
        readonly type: "uint64";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes";
        readonly name: "metadata";
        readonly type: "bytes";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "editor";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "dao";
        readonly type: "address";
    }];
    readonly name: "RemoveEditorProposalCreated";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "creator";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint64";
        readonly name: "startDate";
        readonly type: "uint64";
    }, {
        readonly indexed: false;
        readonly internalType: "uint64";
        readonly name: "endDate";
        readonly type: "uint64";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes";
        readonly name: "metadata";
        readonly type: "bytes";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "member";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "dao";
        readonly type: "address";
    }];
    readonly name: "RemoveMemberProposalCreated";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "creator";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint64";
        readonly name: "startDate";
        readonly type: "uint64";
    }, {
        readonly indexed: false;
        readonly internalType: "uint64";
        readonly name: "endDate";
        readonly type: "uint64";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes";
        readonly name: "metadata";
        readonly type: "bytes";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "subspace";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "dao";
        readonly type: "address";
    }];
    readonly name: "RemoveSubspaceProposalCreated";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "implementation";
        readonly type: "address";
    }];
    readonly name: "Upgraded";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "voter";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "enum IMajorityVoting.VoteOption";
        readonly name: "voteOption";
        readonly type: "uint8";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "votingPower";
        readonly type: "uint256";
    }];
    readonly name: "VoteCast";
    readonly type: "event";
}, {
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "enum MajorityVotingBase.VotingMode";
        readonly name: "votingMode";
        readonly type: "uint8";
    }, {
        readonly indexed: false;
        readonly internalType: "uint32";
        readonly name: "supportThreshold";
        readonly type: "uint32";
    }, {
        readonly indexed: false;
        readonly internalType: "uint64";
        readonly name: "duration";
        readonly type: "uint64";
    }];
    readonly name: "VotingSettingsUpdated";
    readonly type: "event";
}, {
    readonly inputs: readonly [];
    readonly name: "UPDATE_ADDRESSES_PERMISSION_ID";
    readonly outputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "";
        readonly type: "bytes32";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "UPDATE_VOTING_SETTINGS_PERMISSION_ID";
    readonly outputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "";
        readonly type: "bytes32";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "UPGRADE_PLUGIN_PERMISSION_ID";
    readonly outputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "";
        readonly type: "bytes32";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_account";
        readonly type: "address";
    }];
    readonly name: "addEditor";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_account";
        readonly type: "address";
    }];
    readonly name: "addMember";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "addresslistLength";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_blockNumber";
        readonly type: "uint256";
    }];
    readonly name: "addresslistLengthAtBlock";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_proposalId";
        readonly type: "uint256";
    }];
    readonly name: "canExecute";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_proposalId";
        readonly type: "uint256";
    }, {
        readonly internalType: "address";
        readonly name: "_voter";
        readonly type: "address";
    }, {
        readonly internalType: "enum IMajorityVoting.VoteOption";
        readonly name: "_voteOption";
        readonly type: "uint8";
    }];
    readonly name: "canVote";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_proposalId";
        readonly type: "uint256";
    }];
    readonly name: "cancelProposal";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes";
        readonly name: "_metadataContentUri";
        readonly type: "bytes";
    }, {
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly internalType: "struct IDAO.Action[]";
        readonly name: "_actions";
        readonly type: "tuple[]";
    }, {
        readonly internalType: "uint256";
        readonly name: "_allowFailureMap";
        readonly type: "uint256";
    }, {
        readonly internalType: "enum IMajorityVoting.VoteOption";
        readonly name: "_voteOption";
        readonly type: "uint8";
    }, {
        readonly internalType: "bool";
        readonly name: "_tryEarlyExecution";
        readonly type: "bool";
    }];
    readonly name: "createProposal";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "dao";
    readonly outputs: readonly [{
        readonly internalType: "contract IDAO";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "duration";
    readonly outputs: readonly [{
        readonly internalType: "uint64";
        readonly name: "";
        readonly type: "uint64";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_proposalId";
        readonly type: "uint256";
    }];
    readonly name: "execute";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_proposalId";
        readonly type: "uint256";
    }];
    readonly name: "getProposal";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "open";
        readonly type: "bool";
    }, {
        readonly internalType: "bool";
        readonly name: "executed";
        readonly type: "bool";
    }, {
        readonly components: readonly [{
            readonly internalType: "enum MajorityVotingBase.VotingMode";
            readonly name: "votingMode";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint32";
            readonly name: "supportThreshold";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint64";
            readonly name: "startDate";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endDate";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "snapshotBlock";
            readonly type: "uint64";
        }];
        readonly internalType: "struct MajorityVotingBase.ProposalParameters";
        readonly name: "parameters";
        readonly type: "tuple";
    }, {
        readonly components: readonly [{
            readonly internalType: "uint256";
            readonly name: "abstain";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "yes";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "no";
            readonly type: "uint256";
        }];
        readonly internalType: "struct MajorityVotingBase.Tally";
        readonly name: "tally";
        readonly type: "tuple";
    }, {
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly internalType: "struct IDAO.Action[]";
        readonly name: "actions";
        readonly type: "tuple[]";
    }, {
        readonly internalType: "uint256";
        readonly name: "allowFailureMap";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_proposalId";
        readonly type: "uint256";
    }, {
        readonly internalType: "address";
        readonly name: "_voter";
        readonly type: "address";
    }];
    readonly name: "getVoteOption";
    readonly outputs: readonly [{
        readonly internalType: "enum IMajorityVoting.VoteOption";
        readonly name: "";
        readonly type: "uint8";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "implementation";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "contract IDAO";
        readonly name: "_dao";
        readonly type: "address";
    }, {
        readonly components: readonly [{
            readonly internalType: "enum MajorityVotingBase.VotingMode";
            readonly name: "votingMode";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint32";
            readonly name: "supportThreshold";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint64";
            readonly name: "duration";
            readonly type: "uint64";
        }];
        readonly internalType: "struct MajorityVotingBase.VotingSettings";
        readonly name: "_votingSettings";
        readonly type: "tuple";
    }, {
        readonly internalType: "address[]";
        readonly name: "_initialEditors";
        readonly type: "address[]";
    }, {
        readonly internalType: "contract MemberAccessPlugin";
        readonly name: "_memberAccessPlugin";
        readonly type: "address";
    }];
    readonly name: "initialize";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_account";
        readonly type: "address";
    }];
    readonly name: "isEditor";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_account";
        readonly type: "address";
    }];
    readonly name: "isListed";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_account";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "_blockNumber";
        readonly type: "uint256";
    }];
    readonly name: "isListedAtBlock";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_account";
        readonly type: "address";
    }];
    readonly name: "isMember";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_proposalId";
        readonly type: "uint256";
    }];
    readonly name: "isMinParticipationReached";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_proposalId";
        readonly type: "uint256";
    }];
    readonly name: "isSupportThresholdReached";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_proposalId";
        readonly type: "uint256";
    }];
    readonly name: "isSupportThresholdReachedEarly";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "leaveSpace";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "leaveSpaceAsEditor";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "memberAccessPlugin";
    readonly outputs: readonly [{
        readonly internalType: "contract MemberAccessPlugin";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "pluginType";
    readonly outputs: readonly [{
        readonly internalType: "enum IPlugin.PluginType";
        readonly name: "";
        readonly type: "uint8";
    }];
    readonly stateMutability: "pure";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "proposalCount";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes";
        readonly name: "_metadataContentUri";
        readonly type: "bytes";
    }, {
        readonly internalType: "contract IDAO";
        readonly name: "_subspaceDao";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "_spacePlugin";
        readonly type: "address";
    }];
    readonly name: "proposeAcceptSubspace";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes";
        readonly name: "_metadataContentUri";
        readonly type: "bytes";
    }, {
        readonly internalType: "address";
        readonly name: "_proposedEditor";
        readonly type: "address";
    }];
    readonly name: "proposeAddEditor";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes";
        readonly name: "_metadataContentUri";
        readonly type: "bytes";
    }, {
        readonly internalType: "address";
        readonly name: "_proposedMember";
        readonly type: "address";
    }];
    readonly name: "proposeAddMember";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes";
        readonly name: "_metadataContentUri";
        readonly type: "bytes";
    }, {
        readonly internalType: "string";
        readonly name: "_editsContentUri";
        readonly type: "string";
    }, {
        readonly internalType: "address";
        readonly name: "_spacePlugin";
        readonly type: "address";
    }];
    readonly name: "proposeEdits";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes";
        readonly name: "_metadataContentUri";
        readonly type: "bytes";
    }, {
        readonly internalType: "address";
        readonly name: "_editor";
        readonly type: "address";
    }];
    readonly name: "proposeRemoveEditor";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes";
        readonly name: "_metadataContentUri";
        readonly type: "bytes";
    }, {
        readonly internalType: "address";
        readonly name: "_member";
        readonly type: "address";
    }];
    readonly name: "proposeRemoveMember";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes";
        readonly name: "_metadataContentUri";
        readonly type: "bytes";
    }, {
        readonly internalType: "contract IDAO";
        readonly name: "_subspaceDao";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "_spacePlugin";
        readonly type: "address";
    }];
    readonly name: "proposeRemoveSubspace";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "proposalId";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "proxiableUUID";
    readonly outputs: readonly [{
        readonly internalType: "bytes32";
        readonly name: "";
        readonly type: "bytes32";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_account";
        readonly type: "address";
    }];
    readonly name: "removeEditor";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "_account";
        readonly type: "address";
    }];
    readonly name: "removeMember";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "supportThreshold";
    readonly outputs: readonly [{
        readonly internalType: "uint32";
        readonly name: "";
        readonly type: "uint32";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "bytes4";
        readonly name: "_interfaceId";
        readonly type: "bytes4";
    }];
    readonly name: "supportsInterface";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_blockNumber";
        readonly type: "uint256";
    }];
    readonly name: "totalVotingPower";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "enum MajorityVotingBase.VotingMode";
            readonly name: "votingMode";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint32";
            readonly name: "supportThreshold";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint64";
            readonly name: "duration";
            readonly type: "uint64";
        }];
        readonly internalType: "struct MajorityVotingBase.VotingSettings";
        readonly name: "_votingSettings";
        readonly type: "tuple";
    }];
    readonly name: "updateVotingSettings";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "newImplementation";
        readonly type: "address";
    }];
    readonly name: "upgradeTo";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "newImplementation";
        readonly type: "address";
    }, {
        readonly internalType: "bytes";
        readonly name: "data";
        readonly type: "bytes";
    }];
    readonly name: "upgradeToAndCall";
    readonly outputs: readonly [];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "_proposalId";
        readonly type: "uint256";
    }, {
        readonly internalType: "enum IMajorityVoting.VoteOption";
        readonly name: "_voteOption";
        readonly type: "uint8";
    }, {
        readonly internalType: "bool";
        readonly name: "_tryEarlyExecution";
        readonly type: "bool";
    }];
    readonly name: "vote";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "votingMode";
    readonly outputs: readonly [{
        readonly internalType: "enum MajorityVotingBase.VotingMode";
        readonly name: "";
        readonly type: "uint8";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}];
//# sourceMappingURL=main-voting.d.ts.map