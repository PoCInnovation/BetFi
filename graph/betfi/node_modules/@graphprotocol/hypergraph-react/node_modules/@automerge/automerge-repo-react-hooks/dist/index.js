import q, { createContext as I, useContext as j, useRef as $, useState as b, useEffect as y, useCallback as S } from "react";
function O(o) {
  let l = "pending", r, i;
  const h = o.then(
    (p) => {
      l = "success", r = p;
    },
    (p) => {
      l = "error", i = p;
    }
  );
  return {
    promise: o,
    read() {
      switch (l) {
        case "pending":
          throw h;
        case "error":
          throw i;
        case "success":
          return r;
      }
    }
  };
}
const F = I(null);
function k() {
  const o = j(F);
  if (!o) throw new Error("Repo was not found on RepoContext.");
  return o;
}
const x = /* @__PURE__ */ new Map();
function N(o, { suspense: l } = { suspense: !1 }) {
  const r = k(), i = $(), [h, p] = b();
  let u = h;
  if (o && !u) {
    const t = r.findWithProgress(o);
    t.state === "ready" && (u = t.handle);
  }
  let n = o ? x.get(o) : void 0;
  if (!n && o) {
    i.current?.abort(), i.current = new AbortController();
    const t = r.find(o, { signal: i.current.signal });
    n = O(t), x.set(o, n);
  }
  return y(() => {
    l || !n || n.promise.then((t) => {
      p(t);
    }).catch(() => {
      p(void 0);
    });
  }, [l, n]), u || !l || !n ? u : n.read();
}
function Q(o, l = { suspense: !1 }) {
  const r = N(o, l), [i, h] = b(() => r?.doc()), [p, u] = b();
  y(() => {
    h(r?.doc());
  }, [r]), y(() => {
    if (!r)
      return;
    const t = () => h(r.doc()), e = () => {
      u(new Error(`Document ${o} was deleted`));
    };
    return r.on("change", t), r.on("delete", e), () => {
      r.removeListener("change", t), r.removeListener("delete", e);
    };
  }, [r, o]);
  const n = S(
    (t, e) => {
      r.change(t, e);
    },
    [r]
  );
  if (p)
    throw p;
  return i ? [i, n] : [void 0, () => {
  }];
}
function W(o, { suspense: l = !1 } = {}) {
  const r = k(), [i, h] = b(() => {
    const n = /* @__PURE__ */ new Map();
    for (const t of o) {
      let e;
      try {
        e = r.findWithProgress(t);
      } catch {
        continue;
      }
      e.state === "ready" && n.set(t, e.handle);
    }
    return n;
  }), p = [], u = /* @__PURE__ */ new Map();
  for (const n of o) {
    let t = i.get(n), e = x.get(n);
    if (!e)
      try {
        const s = r.find(n);
        e = O(s), x.set(n, e);
      } catch {
        continue;
      }
    try {
      t ??= e.read(), u.set(n, t);
    } catch (s) {
      s instanceof Promise ? p.push(e) : u.set(n, void 0);
    }
  }
  if (y(() => {
    p.length > 0 ? Promise.allSettled(p.map((n) => n.promise)).then(
      (n) => {
        n.forEach((t) => {
          if (t.status === "fulfilled") {
            const e = t.value;
            u.set(e.url, e);
          }
        }), h(u);
      }
    ) : h(u);
  }, [l, o]), l && p.length > 0)
    throw Promise.all(p.map((n) => n.promise));
  return i;
}
function V(o, { suspense: l = !0 } = {}) {
  const r = W(o, { suspense: l }), [i, h] = b(() => {
    const u = /* @__PURE__ */ new Map();
    return r.forEach((n) => {
      const t = n?.url;
      t && u.set(t, n?.doc());
    }), u;
  });
  y(() => {
    const u = /* @__PURE__ */ new Map();
    return r.forEach((n, t) => {
      if (n) {
        const e = () => {
          h((s) => {
            const c = new Map(s);
            return c.set(t, n.doc()), c;
          });
        };
        h((s) => {
          const c = new Map(s);
          return c.set(t, n.doc()), c;
        }), n.on("change", e), u.set(t, e);
      }
    }), h((n) => {
      const t = new Map(n);
      for (const [e] of t)
        r.has(e) || t.delete(e);
      return t;
    }), () => {
      r.forEach((n, t) => {
        const e = u.get(t);
        n && e && n.removeListener("change", e);
      });
    };
  }, [r]);
  const p = S(
    (u, n, t) => {
      const e = r.get(u);
      e && e.change(n, t);
    },
    [r]
  );
  return [i, p];
}
function H(o) {
  return o && o.__esModule && Object.prototype.hasOwnProperty.call(o, "default") ? o.default : o;
}
var C, P;
function T() {
  if (P) return C;
  P = 1;
  var o = q, l = function(i) {
    return typeof i == "function";
  }, r = function(i) {
    var h = o.useState(i), p = h[0], u = h[1], n = o.useRef(p), t = o.useCallback(function(e) {
      n.current = l(e) ? e(n.current) : e, u(n.current);
    }, []);
    return [p, t, n];
  };
  return C = r, C;
}
var z = T();
const L = /* @__PURE__ */ H(z);
var D = { exports: {} }, R;
function B() {
  return R || (R = 1, function(o) {
    var l = Object.prototype.hasOwnProperty, r = "~";
    function i() {
    }
    Object.create && (i.prototype = /* @__PURE__ */ Object.create(null), new i().__proto__ || (r = !1));
    function h(t, e, s) {
      this.fn = t, this.context = e, this.once = s || !1;
    }
    function p(t, e, s, c, w) {
      if (typeof s != "function")
        throw new TypeError("The listener must be a function");
      var v = new h(s, c || t, w), f = r ? r + e : e;
      return t._events[f] ? t._events[f].fn ? t._events[f] = [t._events[f], v] : t._events[f].push(v) : (t._events[f] = v, t._eventsCount++), t;
    }
    function u(t, e) {
      --t._eventsCount === 0 ? t._events = new i() : delete t._events[e];
    }
    function n() {
      this._events = new i(), this._eventsCount = 0;
    }
    n.prototype.eventNames = function() {
      var e = [], s, c;
      if (this._eventsCount === 0) return e;
      for (c in s = this._events)
        l.call(s, c) && e.push(r ? c.slice(1) : c);
      return Object.getOwnPropertySymbols ? e.concat(Object.getOwnPropertySymbols(s)) : e;
    }, n.prototype.listeners = function(e) {
      var s = r ? r + e : e, c = this._events[s];
      if (!c) return [];
      if (c.fn) return [c.fn];
      for (var w = 0, v = c.length, f = new Array(v); w < v; w++)
        f[w] = c[w].fn;
      return f;
    }, n.prototype.listenerCount = function(e) {
      var s = r ? r + e : e, c = this._events[s];
      return c ? c.fn ? 1 : c.length : 0;
    }, n.prototype.emit = function(e, s, c, w, v, f) {
      var m = r ? r + e : e;
      if (!this._events[m]) return !1;
      var a = this._events[m], g = arguments.length, _, d;
      if (a.fn) {
        switch (a.once && this.removeListener(e, a.fn, void 0, !0), g) {
          case 1:
            return a.fn.call(a.context), !0;
          case 2:
            return a.fn.call(a.context, s), !0;
          case 3:
            return a.fn.call(a.context, s, c), !0;
          case 4:
            return a.fn.call(a.context, s, c, w), !0;
          case 5:
            return a.fn.call(a.context, s, c, w, v), !0;
          case 6:
            return a.fn.call(a.context, s, c, w, v, f), !0;
        }
        for (d = 1, _ = new Array(g - 1); d < g; d++)
          _[d - 1] = arguments[d];
        a.fn.apply(a.context, _);
      } else {
        var A = a.length, E;
        for (d = 0; d < A; d++)
          switch (a[d].once && this.removeListener(e, a[d].fn, void 0, !0), g) {
            case 1:
              a[d].fn.call(a[d].context);
              break;
            case 2:
              a[d].fn.call(a[d].context, s);
              break;
            case 3:
              a[d].fn.call(a[d].context, s, c);
              break;
            case 4:
              a[d].fn.call(a[d].context, s, c, w);
              break;
            default:
              if (!_) for (E = 1, _ = new Array(g - 1); E < g; E++)
                _[E - 1] = arguments[E];
              a[d].fn.apply(a[d].context, _);
          }
      }
      return !0;
    }, n.prototype.on = function(e, s, c) {
      return p(this, e, s, c, !1);
    }, n.prototype.once = function(e, s, c) {
      return p(this, e, s, c, !0);
    }, n.prototype.removeListener = function(e, s, c, w) {
      var v = r ? r + e : e;
      if (!this._events[v]) return this;
      if (!s)
        return u(this, v), this;
      var f = this._events[v];
      if (f.fn)
        f.fn === s && (!w || f.once) && (!c || f.context === c) && u(this, v);
      else {
        for (var m = 0, a = [], g = f.length; m < g; m++)
          (f[m].fn !== s || w && !f[m].once || c && f[m].context !== c) && a.push(f[m]);
        a.length ? this._events[v] = a.length === 1 ? a[0] : a : u(this, v);
      }
      return this;
    }, n.prototype.removeAllListeners = function(e) {
      var s;
      return e ? (s = r ? r + e : e, this._events[s] && u(this, s)) : (this._events = new i(), this._eventsCount = 0), this;
    }, n.prototype.off = n.prototype.removeListener, n.prototype.addListener = n.prototype.on, n.prefixed = r, n.EventEmitter = n, o.exports = n;
  }(D)), D.exports;
}
var G = B();
const J = /* @__PURE__ */ H(G), M = new J(), X = ({
  handle: o,
  localUserId: l,
  offlineTimeout: r = 3e4,
  getTime: i = () => (/* @__PURE__ */ new Date()).getTime()
}) => {
  const [h, p, u] = L({}), [n, t, e] = L({});
  return y(() => {
    const s = (v) => {
      const [f, m] = v.message;
      f !== l && (e.current[f] || M.emit("new_peer", v), p({
        ...u.current,
        [f]: m
      }), t({
        ...e.current,
        [f]: i()
      }));
    }, c = () => {
      const v = u.current, f = e.current, m = i();
      for (const a in f)
        m - f[a] > r && (delete v[a], delete f[a]);
      p(v), t(f);
    };
    o.on("ephemeral-message", s);
    const w = setInterval(
      c,
      r
    );
    return () => {
      o.removeListener("ephemeral-message", s), clearInterval(w);
    };
  }, [o, l, r, i]), [h, n];
}, Y = ({
  handle: o,
  userId: l,
  initialState: r,
  heartbeatTime: i = 15e3
}) => {
  const [h, p, u] = L(r), n = (t) => {
    const e = typeof t == "function" ? t(u.current) : t;
    p(e), o.broadcast([l, e]);
  };
  return y(() => {
    if (!l)
      return;
    const t = () => void o.broadcast([l, u.current]);
    t();
    const e = setInterval(t, i);
    return () => void clearInterval(e);
  }, [o, l, i]), y(() => {
    let t;
    const e = M.on("new_peer", () => {
      t = setTimeout(
        () => o.broadcast([l, u.current]),
        500
        // Wait for the peer to be ready
      );
    });
    return () => {
      e.off("new_peer"), t && clearTimeout(t);
    };
  }, [o, l, M]), [h, n];
};
export {
  F as RepoContext,
  N as useDocHandle,
  W as useDocHandles,
  Q as useDocument,
  V as useDocuments,
  Y as useLocalAwareness,
  X as useRemoteAwareness,
  k as useRepo
};
