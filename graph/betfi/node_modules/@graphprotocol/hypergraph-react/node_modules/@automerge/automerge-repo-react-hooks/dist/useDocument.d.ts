import { AnyDocumentId } from '@automerge/automerge-repo/slim';
import { ChangeFn, ChangeOptions, Doc } from '@automerge/automerge/slim';

/**
 * A hook which returns a document and a function to change it.
 * Uses React Suspense for loading states, returning a tuple matching useState pattern.
 *
 * @example
 * ```tsx
 * function Counter() {
 *   const [doc, changeDoc] = useDocument<{ count: number }>(docUrl)
 *   return (
 *     <button onClick={() => changeDoc(d => d.count++)}>
 *       Count: {doc.count}
 *     </button>
 *   )
 * }
 *
 * // Must be wrapped in Suspense boundary
 * <Suspense fallback={<Loading />}>
 *   <Counter />
 * </Suspense>
 * ```
 */
interface UseDocumentSuspendingParams {
    suspense: true;
}
interface UseDocumentSynchronousParams {
    suspense: false;
}
export type UseDocumentReturn<T> = [
    Doc<T>,
    (changeFn: ChangeFn<T>, options?: ChangeOptions<T>) => void
];
export declare function useDocument<T>(id: AnyDocumentId, params: UseDocumentSuspendingParams): UseDocumentReturn<T>;
export declare function useDocument<T>(id: AnyDocumentId | undefined, params?: UseDocumentSynchronousParams): UseDocumentReturn<T> | [undefined, () => void];
export {};
//# sourceMappingURL=useDocument.d.ts.map