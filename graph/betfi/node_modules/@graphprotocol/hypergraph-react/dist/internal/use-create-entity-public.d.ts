import type { Connect } from '@graphprotocol/hypergraph';
import type { Entity } from '@graphprotocol/hypergraph';
import type * as Schema from 'effect/Schema';
type CreateEntityPublicParams = {
    space: string;
};
export declare function useCreateEntityPublic<const S extends Entity.AnyNoContext>(type: S, { space }: CreateEntityPublicParams): (data: Readonly<Schema.Schema.Type<Entity.Insert<S>>>, { walletClient }: {
    walletClient: Connect.SmartSessionClient;
}) => Promise<{
    success: boolean;
    cid: string;
    txResult: `0x${string}`;
    error?: never;
} | {
    success: boolean;
    error: string;
    cid?: never;
    txResult?: never;
}>;
export {};
//# sourceMappingURL=use-create-entity-public.d.ts.map