'use client';

import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { EntityCard } from './entity-card.js';
import { UpdatedEntityCard } from './updated-entity-card.js';
export const PublishDiff = ({
  newEntities = [],
  deletedEntities = [],
  updatedEntities = []
}) => {
  return _jsxs("div", {
    className: "space-y-6 text-sm",
    children: [newEntities.length > 0 && _jsxs("section", {
      children: [_jsxs("h2", {
        className: "text-base font-semibold mb-3 flex items-center",
        children: [_jsxs("svg", {
          className: "w-4 h-4 mr-2 text-green-500",
          viewBox: "0 0 24 24",
          fill: "none",
          stroke: "currentColor",
          strokeWidth: "2",
          strokeLinecap: "round",
          strokeLinejoin: "round",
          "aria-label": "New Entities",
          children: [_jsx("title", {
            children: "New Entities"
          }), _jsx("path", {
            d: "M12 5v14M5 12h14"
          })]
        }), "New Entities (", newEntities.length, ")"]
      }), _jsx("div", {
        className: "space-y-3",
        children: newEntities.map(({
          entity
        }) => _jsx(EntityCard, {
          entity: entity,
          type: "new"
        }, entity.id))
      })]
    }), updatedEntities.length > 0 && _jsxs("section", {
      children: [_jsxs("h2", {
        className: "text-base font-semibold mb-3",
        children: ["Updated Entities (", updatedEntities.length, ")"]
      }), _jsx("div", {
        className: "space-y-3",
        children: updatedEntities.map(entity => _jsx(UpdatedEntityCard, {
          entity: entity
        }, entity.id))
      })]
    }), deletedEntities.length > 0 && _jsxs("section", {
      children: [_jsxs("h2", {
        className: "text-base font-semibold mb-3 flex items-center",
        children: [_jsxs("svg", {
          className: "w-4 h-4 mr-2 text-red-500",
          viewBox: "0 0 24 24",
          fill: "none",
          stroke: "currentColor",
          strokeWidth: "2",
          strokeLinecap: "round",
          strokeLinejoin: "round",
          children: [_jsx("title", {
            children: "Deleted Entities"
          }), _jsx("path", {
            d: "M3 6h18M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"
          })]
        }), "Deleted Entities (", deletedEntities.length, ")"]
      }), _jsx("div", {
        className: "space-y-3",
        children: deletedEntities.map(({
          entity
        }) => _jsx(EntityCard, {
          entity: entity,
          type: "deleted"
        }, entity.id))
      })]
    }), newEntities.length === 0 && updatedEntities.length === 0 && deletedEntities.length === 0 && _jsx("div", {
      className: "text-center py-6 text-xs text-muted-foreground",
      children: "No changes detected"
    })]
  });
};
//# sourceMappingURL=publish-diff.js.map