import * as Schema from 'effect/Schema';
import type { AnyNoContext, EntityWithRelation } from '../entity/types.js';
export declare const Text: typeof Schema.String;
export declare const Number: typeof Schema.Number;
export declare const Checkbox: typeof Schema.Boolean;
export declare const Date: typeof Schema.Date;
export declare const Url: typeof Schema.URL;
export declare const Point: Schema.transform<typeof Schema.String, Schema.Array$<typeof Schema.Number>>;
export declare const Relation: <S extends AnyNoContext>(schema: S) => import("../entity/variant-schema.js").Field<{
    readonly select: Schema.Schema<ReadonlyArray<EntityWithRelation<S>>>;
    readonly insert: Schema.optional<Schema.Array$<typeof Schema.String>>;
    readonly update: typeof Schema.Undefined;
}>;
//# sourceMappingURL=type.d.ts.map