import mainVotingAbi from './abis/MainVotingPlugin.json';
import personalSpaceAdminAbi from './abis/PersonalSpaceAdminPlugin.json';
export { mainVotingAbi, personalSpaceAdminAbi };
export declare const safeModuleManagerAbi: {
    inputs: {
        internalType: string;
        name: string;
        type: string;
    }[];
    name: string;
    outputs: never[];
    stateMutability: string;
    type: string;
}[];
export declare const safeOwnerManagerAbi: {
    inputs: {
        internalType: string;
        name: string;
        type: string;
    }[];
    name: string;
    outputs: {
        internalType: string;
        name: string;
        type: string;
    }[];
    stateMutability: string;
    type: string;
}[];
export declare const smartSessionsAbi: {
    inputs: {
        internalType: string;
        name: string;
        type: string;
    }[];
    name: string;
    outputs: never[];
    stateMutability: string;
    type: string;
}[];
export declare const safe7579Abi: {
    type: string;
    name: string;
    inputs: {
        name: string;
        type: string;
        internalType: string;
    }[];
    outputs: {
        name: string;
        type: string;
        internalType: string;
    }[];
    stateMutability: string;
}[];
export declare const daoFactoryAbi: readonly [{
    readonly inputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "trustedForwarder";
            readonly type: "address";
        }, {
            readonly internalType: "string";
            readonly name: "daoURI";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "subdomain";
            readonly type: "string";
        }, {
            readonly internalType: "bytes";
            readonly name: "metadata";
            readonly type: "bytes";
        }];
        readonly internalType: "struct DAOFactory.DAOSettings";
        readonly name: "_daoSettings";
        readonly type: "tuple";
    }, {
        readonly components: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "release";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "uint16";
                    readonly name: "build";
                    readonly type: "uint16";
                }];
                readonly internalType: "struct PluginRepo.Tag";
                readonly name: "versionTag";
                readonly type: "tuple";
            }, {
                readonly internalType: "contract PluginRepo";
                readonly name: "pluginSetupRepo";
                readonly type: "address";
            }];
            readonly internalType: "struct PluginSetupRef";
            readonly name: "pluginSetupRef";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly internalType: "struct DAOFactory.PluginSettings[]";
        readonly name: "_pluginSettings";
        readonly type: "tuple[]";
    }];
    readonly name: "createDao";
    readonly outputs: readonly [{
        readonly internalType: "contract DAO";
        readonly name: "createdDao";
        readonly type: "address";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}];
//# sourceMappingURL=abis.d.ts.map