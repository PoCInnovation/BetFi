import type { SmartAccountClient } from 'permissionless';
import type { Address, Chain, WalletClient } from 'viem';
import type { IdentityKeys, Signer, Storage } from './types.js';
export declare function identityExists(accountAddress: string, syncServerUri: string): Promise<boolean>;
export declare function signup(signer: Signer, walletClient: WalletClient, smartAccountClient: SmartAccountClient, accountAddress: Address, syncServerUri: string, addressStorage: Storage, keysStorage: Storage, identityToken: string, chain: Chain, rpcUrl: string): Promise<{
    accountAddress: `0x${string}`;
    keys: IdentityKeys;
}>;
export declare function restoreKeys(signer: Signer, accountAddress: Address, syncServerUri: string, addressStorage: Storage, keysStorage: Storage, identityToken: string): Promise<{
    accountAddress: `0x${string}`;
    keys: IdentityKeys;
}>;
export declare function login({ walletClient, signer, syncServerUri, addressStorage, keysStorage, identityToken, rpcUrl, chain, }: {
    walletClient: WalletClient;
    signer: Signer;
    syncServerUri: string;
    addressStorage: Storage;
    keysStorage: Storage;
    identityToken: string;
    rpcUrl: string;
    chain: Chain;
}): Promise<void>;
//# sourceMappingURL=login.d.ts.map